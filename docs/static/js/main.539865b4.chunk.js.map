{"version":3,"sources":["ChatBox.js","App.js","index.js"],"names":["ChatBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","e","onButtonClick","name","state","text","setState","_this2","react_default","a","createElement","className","placeholder","value","onChange","target","onClick","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","n","sort","b","console","log","App","chatObj","chatObjs","concat","collection","add","updatedAt","FieldValue","serverTimestamp","then","catch","error","onSnapshot","querySnapshot","data","docs","filter","v","metadata","hasPendingWrites","map","seconds","Date","getTime","list","i","key","ChatBox_ChatBox","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.539865b4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ChatBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onButtonClick = props.onButtonClick;\n    this.state = {\n      name: \"\",\n      text: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"ChatBox\">\n        <input placeholder=\"名前\" value={this.state.name} onChange={(e) => this.setState({ name: e.target.value })} />\n        <textarea placeholder=\"コメント\" value={this.state.text} onChange={(e) => this.setState({ text: e.target.value })} />\n        <button onClick={this.submit}>送信</button>\n      </div>\n    );\n  }\n\n  submit = (e) => {\n    this.onButtonClick({\n      name: this.state.name,\n      text: this.state.text\n    });\n    this.setState({\n      text: \"\"\n    });\n  }\n}","import React from 'react';\nimport './App.css';\nimport ChatBox from './ChatBox';\n\nimport firebase from 'firebase/app'; //必須\nimport 'firebase/firestore'; //必要なモジュールごとにimport\n//例: Cloud Functionを使う場合は import 'firebase/function';\n\n//インスタンスの初期化\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDNckvdwFU9B-Xg3YPY-tgsrj09kg0MTxE\",\n  authDomain: \"puyotan-be458.firebaseapp.com\",\n  databaseURL: \"https://puyotan-be458.firebaseio.com\",\n  projectId: \"puyotan-be458\",\n  storageBucket: \"puyotan-be458.appspot.com\",\n  messagingSenderId: \"1067679324903\"\n});\n\nconst db = firebase.firestore();\nconst settings = { timestampsInSnapshots: true };\ndb.settings(settings);\n\nconst a = [{ n: 1 }, { n: 3 }, { n: 5 }, { n: 2 }];\na.sort((a, b) => a.n - b.n);\nconsole.log(a);\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatObjs: []\n    }\n    db.collection(\"comments\").onSnapshot((querySnapshot) => {\n      const data = querySnapshot.docs.filter((v) => !v.metadata.hasPendingWrites).map((v) => {\n        const data = v.data();\n        return {\n          name: data.name,\n          text: data.text,\n          updatedAt: data.updatedAt != null ? data.updatedAt.seconds : (new Date().getTime() / 1000)\n        }\n      });\n      data.sort((a, b) => {\n        return a.updatedAt - b.updatedAt\n      });\n      this.setState({\n        chatObjs: data\n      });\n    });\n  }\n\n  render() {\n    console.log('render');\n    var list = this.state.chatObjs.map((v, i) => <p key={i}>{v.name}: {v.text} :{v.updatedAt}</p>);\n\n    return (\n      <div className=\"App\">\n        <h1>ぷよたんテスト</h1>\n        {list}\n        <ChatBox onButtonClick={this.onButtonClick} />\n      </div>\n    );\n  }\n\n  onButtonClick = (chatObj) => {\n    console.log(chatObj);\n    this.setState({\n      chatObjs: this.state.chatObjs.concat(chatObj)\n    });\n    db.collection(\"comments\").add({\n      name: chatObj.name,\n      text: chatObj.text,\n      updatedAt: firebase.firestore.FieldValue.serverTimestamp()\n    })\n      .then(function () {\n        console.log(\"Document successfully written!\");\n      })\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}